-- Partitioned time-series table for campaign metrics (monthly interval partitions)
CREATE TABLE CAMPAIGN_METRICS_TIMESERIES (
    CAMPAIGN_ID        NUMBER(19)        NOT NULL,
    METRIC_DATE        DATE              NOT NULL,
    METRIC_HOUR        NUMBER(2),
    SENT_COUNT         NUMBER(10),
    DELIVERED_COUNT    NUMBER(10),
    OPENED_COUNT       NUMBER(10),
    CLICKED_COUNT      NUMBER(10),
    CONVERTED_COUNT    NUMBER(10),
    REVENUE            NUMBER(12,2),
    CONSTRAINT PK_CAMPAIGN_METRICS_TS PRIMARY KEY (CAMPAIGN_ID, METRIC_DATE, METRIC_HOUR)
)
PARTITION BY RANGE (METRIC_DATE)
INTERVAL (NUMTOYMINTERVAL(1,'MONTH'))
(
    PARTITION P_START VALUES LESS THAN (DATE '2024-01-01')
);

-- Idempotent index + MV log + MV creation (ensure MV log exists BEFORE MV for FAST refresh)
DECLARE
    e_exists EXCEPTION; PRAGMA EXCEPTION_INIT(e_exists,-955);
    e_mv_exists EXCEPTION; PRAGMA EXCEPTION_INIT(e_mv_exists,-12006);
BEGIN
    -- Index
    BEGIN EXECUTE IMMEDIATE 'CREATE INDEX IDX_CAMPAIGN_METRICS_TS_DATE ON CAMPAIGN_METRICS_TIMESERIES (CAMPAIGN_ID, METRIC_DATE)'; EXCEPTION WHEN e_exists THEN NULL; END;
    -- MV LOG (name auto-generated MLOG$_CAMPAIGN_METRICS_TIMESERIES) must precede FAST MV
    BEGIN EXECUTE IMMEDIATE 'CREATE MATERIALIZED VIEW LOG ON CAMPAIGN_METRICS_TIMESERIES WITH ROWID, SEQUENCE (CAMPAIGN_ID, METRIC_DATE, SENT_COUNT, DELIVERED_COUNT, OPENED_COUNT, CLICKED_COUNT, CONVERTED_COUNT, REVENUE) INCLUDING NEW VALUES'; EXCEPTION WHEN e_exists THEN NULL; WHEN e_mv_exists THEN NULL; END;
    -- Daily aggregate MV (FAST refresh)
    BEGIN EXECUTE IMMEDIATE 'CREATE MATERIALIZED VIEW CAMPAIGN_METRICS_DAILY BUILD IMMEDIATE REFRESH FAST ON DEMAND AS SELECT CAMPAIGN_ID, TRUNC(METRIC_DATE) AS METRIC_DATE, SUM(SENT_COUNT) AS SENT_COUNT, SUM(DELIVERED_COUNT) AS DELIVERED_COUNT, SUM(OPENED_COUNT) AS OPENED_COUNT, SUM(CLICKED_COUNT) AS CLICKED_COUNT, SUM(CONVERTED_COUNT) AS CONVERTED_COUNT, SUM(REVENUE) AS REVENUE FROM CAMPAIGN_METRICS_TIMESERIES GROUP BY CAMPAIGN_ID, TRUNC(METRIC_DATE)'; EXCEPTION WHEN e_exists THEN NULL; WHEN e_mv_exists THEN NULL; END;
END;
/
